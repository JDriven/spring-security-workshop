// Generated by delombok at Tue Oct 04 10:22:38 WEST 2022
package com.jdriven.leaverequest;

import java.time.LocalDate;
import java.util.List;
import java.util.UUID;
import java.util.stream.Collectors;
import com.jdriven.leaverequest.LeaveRequest.Status;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.format.annotation.DateTimeFormat.ISO;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import static org.springframework.http.ResponseEntity.accepted;
import static org.springframework.http.ResponseEntity.noContent;
import static org.springframework.http.ResponseEntity.ok;

@RestController
class LeaveRequestController {
	private final LeaveRequestService service;

	@PostMapping("/request/{employee}")
	public ResponseEntity<LeaveRequestDTO> request(@PathVariable String employee, @DateTimeFormat(iso = ISO.DATE) @RequestParam LocalDate from, @DateTimeFormat(iso = ISO.DATE) @RequestParam LocalDate to) {
		LeaveRequest leaveRequest = service.request(employee, from, to);
		return accepted().body(new LeaveRequestDTO(leaveRequest));
	}

	@PostMapping("/approve/{id}")
	public ResponseEntity<LeaveRequestDTO> approve(@PathVariable UUID id) {
		return service.approve(id).map(lr -> accepted().body(new LeaveRequestDTO(lr))).orElse(noContent().build());
	}

	@PostMapping("/deny/{id}")
	public ResponseEntity<LeaveRequestDTO> deny(@PathVariable UUID id) {
		return service.deny(id).map(lr -> accepted().body(new LeaveRequestDTO(lr))).orElse(noContent().build());
	}

	@GetMapping("/view/request/{id}")
	public ResponseEntity<LeaveRequestDTO> viewRequest(@PathVariable UUID id) {
		return service.retrieve(id).map(lr -> ok().body(new LeaveRequestDTO(lr))).orElse(noContent().build());
	}

	@GetMapping("/view/employee/{employee}")
	public List<LeaveRequestDTO> viewEmployee(@PathVariable String employee) {
		return service.retrieveFor(employee).stream().map(LeaveRequestDTO::new).collect(Collectors.toList());
	}

	@GetMapping("/view/all")
	public List<LeaveRequestDTO> viewAll() {
		return service.retrieveAll().stream().map(LeaveRequestDTO::new).collect(Collectors.toList());
	}

	@java.lang.SuppressWarnings("all")
	public LeaveRequestController(final LeaveRequestService service) {
		this.service = service;
	}
}

class LeaveRequestDTO {
	private UUID id;
	private String employee;
	private LocalDate fromDate;
	private LocalDate toDate;
	private Status status;

	LeaveRequestDTO(LeaveRequest leaveRequest) {
		this.id = leaveRequest.getId();
		this.employee = leaveRequest.getEmployee();
		this.fromDate = leaveRequest.getFromDate();
		this.toDate = leaveRequest.getToDate();
		this.status = leaveRequest.getStatus();
	}

	@java.lang.SuppressWarnings("all")
	public UUID getId() {
		return this.id;
	}

	@java.lang.SuppressWarnings("all")
	public String getEmployee() {
		return this.employee;
	}

	@java.lang.SuppressWarnings("all")
	public LocalDate getFromDate() {
		return this.fromDate;
	}

	@java.lang.SuppressWarnings("all")
	public LocalDate getToDate() {
		return this.toDate;
	}

	@java.lang.SuppressWarnings("all")
	public Status getStatus() {
		return this.status;
	}

	@java.lang.SuppressWarnings("all")
	public void setId(final UUID id) {
		this.id = id;
	}

	@java.lang.SuppressWarnings("all")
	public void setEmployee(final String employee) {
		this.employee = employee;
	}

	@java.lang.SuppressWarnings("all")
	public void setFromDate(final LocalDate fromDate) {
		this.fromDate = fromDate;
	}

	@java.lang.SuppressWarnings("all")
	public void setToDate(final LocalDate toDate) {
		this.toDate = toDate;
	}

	@java.lang.SuppressWarnings("all")
	public void setStatus(final Status status) {
		this.status = status;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof LeaveRequestDTO)) return false;
		final LeaveRequestDTO other = (LeaveRequestDTO) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		final java.lang.Object this$id = this.getId();
		final java.lang.Object other$id = other.getId();
		if (this$id == null ? other$id != null : !this$id.equals(other$id)) return false;
		final java.lang.Object this$employee = this.getEmployee();
		final java.lang.Object other$employee = other.getEmployee();
		if (this$employee == null ? other$employee != null : !this$employee.equals(other$employee)) return false;
		final java.lang.Object this$fromDate = this.getFromDate();
		final java.lang.Object other$fromDate = other.getFromDate();
		if (this$fromDate == null ? other$fromDate != null : !this$fromDate.equals(other$fromDate)) return false;
		final java.lang.Object this$toDate = this.getToDate();
		final java.lang.Object other$toDate = other.getToDate();
		if (this$toDate == null ? other$toDate != null : !this$toDate.equals(other$toDate)) return false;
		final java.lang.Object this$status = this.getStatus();
		final java.lang.Object other$status = other.getStatus();
		if (this$status == null ? other$status != null : !this$status.equals(other$status)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof LeaveRequestDTO;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final java.lang.Object $id = this.getId();
		result = result * PRIME + ($id == null ? 43 : $id.hashCode());
		final java.lang.Object $employee = this.getEmployee();
		result = result * PRIME + ($employee == null ? 43 : $employee.hashCode());
		final java.lang.Object $fromDate = this.getFromDate();
		result = result * PRIME + ($fromDate == null ? 43 : $fromDate.hashCode());
		final java.lang.Object $toDate = this.getToDate();
		result = result * PRIME + ($toDate == null ? 43 : $toDate.hashCode());
		final java.lang.Object $status = this.getStatus();
		result = result * PRIME + ($status == null ? 43 : $status.hashCode());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "LeaveRequestDTO(id=" + this.getId() + ", employee=" + this.getEmployee() + ", fromDate=" + this.getFromDate() + ", toDate=" + this.getToDate() + ", status=" + this.getStatus() + ")";
	}

	@java.lang.SuppressWarnings("all")
	public LeaveRequestDTO() {
	}
}
