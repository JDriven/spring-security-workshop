// Generated by delombok at Tue Oct 04 10:22:38 WEST 2022
package com.jdriven.leaverequest;

import java.time.LocalDate;
import java.util.UUID;

class LeaveRequest {
	private final UUID id = UUID.fromString("2a37e1b6-d7e3-45fd-8b50-59357425d62e"); // Hardcoded to match README curls
	private String employee;
	private LocalDate fromDate;
	private LocalDate toDate;
	private Status status;


	public enum Status {
		PENDING, APPROVED, DENIED;
	}

	@java.lang.SuppressWarnings("all")
	private static Status $default$status() {
		return Status.PENDING;
	}


	@java.lang.SuppressWarnings("all")
	public static class LeaveRequestBuilder {
		@java.lang.SuppressWarnings("all")
		private String employee;
		@java.lang.SuppressWarnings("all")
		private LocalDate fromDate;
		@java.lang.SuppressWarnings("all")
		private LocalDate toDate;
		@java.lang.SuppressWarnings("all")
		private boolean status$set;
		@java.lang.SuppressWarnings("all")
		private Status status$value;

		@java.lang.SuppressWarnings("all")
		LeaveRequestBuilder() {
		}

		/**
		 * @return {@code this}.
		 */
		@java.lang.SuppressWarnings("all")
		public LeaveRequest.LeaveRequestBuilder employee(final String employee) {
			this.employee = employee;
			return this;
		}

		/**
		 * @return {@code this}.
		 */
		@java.lang.SuppressWarnings("all")
		public LeaveRequest.LeaveRequestBuilder fromDate(final LocalDate fromDate) {
			this.fromDate = fromDate;
			return this;
		}

		/**
		 * @return {@code this}.
		 */
		@java.lang.SuppressWarnings("all")
		public LeaveRequest.LeaveRequestBuilder toDate(final LocalDate toDate) {
			this.toDate = toDate;
			return this;
		}

		/**
		 * @return {@code this}.
		 */
		@java.lang.SuppressWarnings("all")
		public LeaveRequest.LeaveRequestBuilder status(final Status status) {
			this.status$value = status;
			status$set = true;
			return this;
		}

		@java.lang.SuppressWarnings("all")
		public LeaveRequest build() {
			Status status$value = this.status$value;
			if (!this.status$set) status$value = LeaveRequest.$default$status();
			return new LeaveRequest(this.employee, this.fromDate, this.toDate, status$value);
		}

		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		public java.lang.String toString() {
			return "LeaveRequest.LeaveRequestBuilder(employee=" + this.employee + ", fromDate=" + this.fromDate + ", toDate=" + this.toDate + ", status$value=" + this.status$value + ")";
		}
	}

	@java.lang.SuppressWarnings("all")
	public static LeaveRequest.LeaveRequestBuilder builder() {
		return new LeaveRequest.LeaveRequestBuilder();
	}

	@java.lang.SuppressWarnings("all")
	public UUID getId() {
		return this.id;
	}

	@java.lang.SuppressWarnings("all")
	public String getEmployee() {
		return this.employee;
	}

	@java.lang.SuppressWarnings("all")
	public LocalDate getFromDate() {
		return this.fromDate;
	}

	@java.lang.SuppressWarnings("all")
	public LocalDate getToDate() {
		return this.toDate;
	}

	@java.lang.SuppressWarnings("all")
	public Status getStatus() {
		return this.status;
	}

	@java.lang.SuppressWarnings("all")
	public void setEmployee(final String employee) {
		this.employee = employee;
	}

	@java.lang.SuppressWarnings("all")
	public void setFromDate(final LocalDate fromDate) {
		this.fromDate = fromDate;
	}

	@java.lang.SuppressWarnings("all")
	public void setToDate(final LocalDate toDate) {
		this.toDate = toDate;
	}

	@java.lang.SuppressWarnings("all")
	public void setStatus(final Status status) {
		this.status = status;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof LeaveRequest)) return false;
		final LeaveRequest other = (LeaveRequest) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		final java.lang.Object this$id = this.getId();
		final java.lang.Object other$id = other.getId();
		if (this$id == null ? other$id != null : !this$id.equals(other$id)) return false;
		final java.lang.Object this$employee = this.getEmployee();
		final java.lang.Object other$employee = other.getEmployee();
		if (this$employee == null ? other$employee != null : !this$employee.equals(other$employee)) return false;
		final java.lang.Object this$fromDate = this.getFromDate();
		final java.lang.Object other$fromDate = other.getFromDate();
		if (this$fromDate == null ? other$fromDate != null : !this$fromDate.equals(other$fromDate)) return false;
		final java.lang.Object this$toDate = this.getToDate();
		final java.lang.Object other$toDate = other.getToDate();
		if (this$toDate == null ? other$toDate != null : !this$toDate.equals(other$toDate)) return false;
		final java.lang.Object this$status = this.getStatus();
		final java.lang.Object other$status = other.getStatus();
		if (this$status == null ? other$status != null : !this$status.equals(other$status)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof LeaveRequest;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final java.lang.Object $id = this.getId();
		result = result * PRIME + ($id == null ? 43 : $id.hashCode());
		final java.lang.Object $employee = this.getEmployee();
		result = result * PRIME + ($employee == null ? 43 : $employee.hashCode());
		final java.lang.Object $fromDate = this.getFromDate();
		result = result * PRIME + ($fromDate == null ? 43 : $fromDate.hashCode());
		final java.lang.Object $toDate = this.getToDate();
		result = result * PRIME + ($toDate == null ? 43 : $toDate.hashCode());
		final java.lang.Object $status = this.getStatus();
		result = result * PRIME + ($status == null ? 43 : $status.hashCode());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "LeaveRequest(id=" + this.getId() + ", employee=" + this.getEmployee() + ", fromDate=" + this.getFromDate() + ", toDate=" + this.getToDate() + ", status=" + this.getStatus() + ")";
	}

	@java.lang.SuppressWarnings("all")
	public LeaveRequest() {
		this.status = LeaveRequest.$default$status();
	}

	@java.lang.SuppressWarnings("all")
	public LeaveRequest(final String employee, final LocalDate fromDate, final LocalDate toDate, final Status status) {
		this.employee = employee;
		this.fromDate = fromDate;
		this.toDate = toDate;
		this.status = status;
	}
}
